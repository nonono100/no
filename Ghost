
local Library           = loadstring(game:HttpGet("https://raw.githubusercontent.com/mkswlorn/My-Repo/main/UI"))();
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/nonono100/no/main/NotifyUI"))()
getgenv().GSettings = {
SetKey = "F1";
SilentFOV = 40;
NoFall = false;
Notifs = true;
AutoIrid = false;
ChatSpy = false;
};

local function SaveSettings()
local JSON -- is nil
local HttpService = game:service('HttpService') -- used for the JSON DECODE AND ENCODE
--Decode
JSON = HttpService:JSONEncode(getgenv().GSettings)
--Make a text file using 'writefile'
writefile('GHSet.txt',JSON)
end
local function LoadSettings()
local HttpService = game:service('HttpService')

--use 'isfile' to check if we are reading the correct txt file

if isfile('GHSet.txt') then
--use 'readfile' to read 'TUTORIAL.txt' and decode it
getgenv().GSettings = HttpService:JSONDecode(readfile('GHSet.txt'))
end
end


local MainWindow        = Library:CreateWindow("Settings");

do
MainWindow:AddBind({text = "Settings KeyBind", flag = "bind", key = "F1", callback = function(a) 
    Library:Close()
    end}) 
end
--print(Library.flags.bind.key)
do
MainWindow:AddSlider({text = "SilentFOV", flag = "slider", value = 40, min = 20, max = 80, float = 1, callback = function(a) 
--changes will apply next game (notify)
print(a)
end})
end

do
MainWindow:AddToggle({text = "No Fall Damage", flag = "NoFall", state = false; callback = function(tog)
    
end});
end

do
MainWindow:AddToggle({text = "Notifications", flag = "Notif", state = true; callback = function(tog)
    
end});
end

do
MainWindow:AddToggle({text = "Auto Iridium", flag = "AutoIrid", state = false; callback = function(tog)
    
    
end});
end

do
MainWindow:AddToggle({text = "Chat Spy", flag = "ChatSpy", state = false; callback = function(tog)
    
    
end});
end



Library:Init(); 
if isfile('GHSet.txt') then
    LoadSettings()
Library:Close()
else 
Notification.Notify(game.Players.LocalPlayer.DisplayName, "Welcome", { [1] = 255, [2] = 200, [3] = 200})
SaveSettings()
end

spawn(function()
while wait(1) do
    if Library.flags.bind ~= GSettings["SetKey"] or Library.flags.slider ~= GSettings["SilentFOV"] or Library.flags.NoFall ~= GSettings["NoFall"] or Library.flags.Notif ~= GSettings["Notifs"] or Library.flags.AutoIrid ~= GSettings["AutoIrid"] or Library.flags.ChatSpy ~= GSettings["ChatSpy"] then
    getgenv().GSettings = {
SetKey = Library.flags.bind;
SilentFOV = Library.flags.slider;
NoFall = Library.flags.NoFall;
Notifs = Library.flags.Notif;
AutoIrid = Library.flags.AutoIrid;
ChatSpy = Library.flags.ChatSpy;
};
SaveSettings()
print("Settings do be changed doe")
    end
    --[[
    print(Library.flags.bind)
print(Library.flags.slider)
print(Library.flags.NoFall)
print(Library.flags.Notif)
print(Library.flags.AutoIrid)
print(Library.flags.ChatSpy)
--]]
end
end)
